trigger:
<<<<<<< HEAD
  - main
=======
  branches:
    exclude:
      - main
    include:
      - auth
>>>>>>> 1700b3d8aadf581e4a6ed9f0564abc1f0b692a9b

pr:
  - "*"

pool:
  vmImage: ubuntu-latest

jobs:
  - job: Build
    displayName: "Build and Publish Artifacts"
    steps:
<<<<<<< HEAD
=======
      - checkout: self
        clean: true
        fetchDepth: 1
        persistCredentials: true
        
        
      
>>>>>>> 1700b3d8aadf581e4a6ed9f0564abc1f0b692a9b
      - task: NodeTool@0
        inputs:
          versionSpec: "20.x"
        displayName: "Install Node.js"

      - script: |
          npm install
          npm run build
<<<<<<< HEAD
        displayName: "npm install and build"
=======
        displayName: "npm install --legacy-peer-deps and build"
>>>>>>> 1700b3d8aadf581e4a6ed9f0564abc1f0b692a9b

      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: "$(Build.BinariesDirectory)"
          includeRootFolder: true
          archiveType: "zip"
          archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
          replaceExistingArchive: true
        displayName: "Archive Build Artifacts"

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: "$(Build.ArtifactStagingDirectory)"
          ArtifactName: "drop"
          publishLocation: "Container"
        displayName: "Publish Build Artifacts"
<<<<<<< HEAD
      - task: Docker@2
        inputs:
          containerRegistry: "docker"
          repository: "mohamedamine1/pfe"
          command: "buildAndPush"
          Dockerfile: "**/Dockerfile"
          tags: "frontend"
=======
      
      - task: Docker@2
        inputs:
          containerRegistry: "docker"
          repository: "mohamedamine1/frontend"
          command: "buildAndPush"
          Dockerfile: "**/Dockerfile"
          tags: "frontend-pfe"
>>>>>>> 1700b3d8aadf581e4a6ed9f0564abc1f0b692a9b
        displayName: "Build and Push Docker Image"
